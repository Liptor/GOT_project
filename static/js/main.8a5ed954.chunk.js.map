{"version":3,"sources":["components/errorMessage/error.jpg","components/header/header.js","components/header/index.js","services/gotService.js","components/spinner/index.js","components/spinner/spinner.js","components/errorMessage/index.js","components/errorMessage/errorMessage.js","components/randomChar/randomChar.js","components/randomChar/index.js","components/itemList/index.js","components/itemList/itemList.js","components/charDetails/index.js","components/charDetails/charDetails.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","HeaderBlock","styled","div","HeaderTitle","h3","HeaderLinks","ul","Header","href","GotService","this","_apiBase","url","fetch","res","ok","Error","status","json","getResourse","map","_transformCharacter","id","character","char","name","gender","born","died","culture","house","region","words","titles","overload","ancestralWeapons","book","numberOfPages","publisher","released","Spinner","className","class","ErrorMessage","src","img","alt","RandomChar","gotService","state","loading","onCharLoaded","setState","error","updateChar","Math","floor","random","getCharacter","then","catch","onError","err","timerId","setInterval","clearInterval","errorMessage","spinner","content","Component","View","ItemList","charList","getAllCharacters","arr","item","key","onClick","props","onCharSelected","items","renderItems","CharDetails","charId","foo","bar","prevProps","App","selectedChar","onRandomChar","clicked","Container","Row","Col","lg","size","offset","md","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a5ed954.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/error.2b92258f.jpg\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst HeaderBlock = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 80px;\n`;\n\nconst HeaderTitle = styled.h3`\n    font-size: 24px;\n    color: #fff;\n    margin: 0;\n`;\n\nconst HeaderLinks = styled.ul`\n    display: flex;\n    margin: 0;\n    align-items: center;\n    color: #fff;\n    list-style-type: none;\n    li {\n        margin-right: 20px;\n        font-size: 18px;\n    }\n`;\n\nconst Header = () => {\n    return (\n        <HeaderBlock>\n            <HeaderTitle>\n                <a href=\"#\">\n                Game of Thrones DB\n                </a>\n            </HeaderTitle>\n            <HeaderLinks>\n                <li>\n                    <a href=\"#\">Characters</a>\n                </li>\n                <li>\n                    <a href=\"#\">Houses</a>\n                </li>\n                <li>\n                    <a href=\"#\">Books</a>   \n                </li>\n            </HeaderLinks>\n        </HeaderBlock>\n    );\n};\n\nexport default Header;","import Header from './header';\n\nexport default Header;","export default class GotService {\r\n    constructor() {\r\n        this._apiBase = 'https://www.anapioficeandfire.com/api/';\r\n    }\r\n\r\n    async getResourse(url) { // !!!!\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}` +\r\n                `, received ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    async getAllCharacters() {\r\n        const res = await this.getResourse('/characters?page=5&pageSize=10');\r\n        return res.map(this._transformCharacter)\r\n    }\r\n\r\n    async getCharacter(id) {\r\n        const character = await this.getResourse(`/characters/${id}`);\r\n        return this._transformCharacter(character); // !!!\r\n    }\r\n    getAllHouses() {\r\n        return this.getResourse(`/houses/`);\r\n    }\r\n    getHouse(id) {\r\n        return this.getResourse(`/characters/${id}`);\r\n    }\r\n    getAllBooks() {\r\n        return this.getResourse(`/books/`);\r\n    }\r\n    getBook(id) {\r\n        return this.getResourse(`/books/${id}`);\r\n    }\r\n\r\n    _transformCharacter(char) {\r\n        return {\r\n            name: char.name,\r\n            gender: char.gender,\r\n            born: char.born,\r\n            died: char.died,\r\n            culture: char.culture\r\n        }\r\n    }\r\n\r\n    _transformHouse(house) {\r\n        return {\r\n            name: house.name,\r\n            region: house.region,\r\n            words: house.words,\r\n            titles: house.titles,\r\n            overload: house.overload,\r\n            ancestralWeapons: house.ancestralWeapons\r\n        }\r\n    }\r\n\r\n    _transformBook(book) {\r\n        return {\r\n            name: book.name,\r\n            numberOfPages: book.numberOfPages,\r\n            publisher: book.publisher,\r\n            released: book.released\r\n        }\r\n    }\r\n}","import Spinner from './spinner'\r\nexport default Spinner;","import React from 'react'\r\nimport './spinner.css'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loadingio-spinner-bean-eater-gfsba5zc3w6\" >\r\n            <div class=\"ldio-lexdw46yiy\"><div><div></div><div></div><div></div></div><div><div></div><div></div><div></div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import ErrorMessage from './errorMessage';\r\nexport default ErrorMessage;","import React from 'react';\r\nimport './errorMessage.css'\r\nimport img from './error.jpg'\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <>\r\n            <img src={img} alt='error'></img>\r\n            <span>Something goes wrong!</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import React, { Component } from 'react';\nimport './randomChar.css';\nimport gotService from '../../services/gotService'\nimport Spinner from '../spinner'\nimport ErrorMessage from '../errorMessage'\n\nexport default class RandomChar extends Component {\n    gotService = new gotService();\n    state = {\n        char: {},\n        loading: true\n    }\n\n    componentDidMount() {\n        this.updateChar();\n        this.timerId = setInterval(this.updateChar, 1500);\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,\n            error: false\n        });\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * 140 + 25); // 25-140 !!!\n\n        this.gotService.getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n    }\n\n    onError = (err) => {\n        this.setState({\n            error: true,\n            loading: false,\n        })\n    }\n\n    render() {\n        const { char, loading, error } = this.state;\n\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char={char} /> : null;\n\n        return (\n            <div className=\"random-block rounded\">\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        );\n    }\n}\n\nconst View = ({ char }) => {\n    const { name, gender, born, died, culture } = char;\n\n    return (\n        <>\n            <h4>Random Character: {name}</h4>\n            <ul className=\"list-group list-group-flush\">\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Gender </span>\n                    <span>{gender}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Born </span>\n                    <span>{born}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Died </span>\n                    <span>{died}</span>\n                </li>\n                <li className=\"list-group-item d-flex justify-content-between\">\n                    <span className=\"term\">Culture </span>\n                    <span>{culture}</span>\n                </li>\n            </ul>\n        </>\n    )\n}","import RandomChar from './randomChar';\n\nexport default RandomChar;","import ItemList from './itemList';\n\nexport default ItemList;","import React, { Component } from 'react';\nimport './itemList.css';\nimport gotService from '../../services/gotService'\nimport { Spinner } from 'reactstrap';\n\nexport default class ItemList extends Component {\n    gotService = new gotService();\n\n    state = {\n        charList: null\n    }\n\n    componentDidMount() {\n        this.gotService.getAllCharacters()\n            .then((charList) => this.setState({\n                charList\n            }))\n    }\n\n    renderItems(arr) {\n        return arr.map((item, id) => {\n            return (\n                <li\n                    key={id}\n                    className=\"list-group-item\"\n                    onClick={() => this.props.onCharSelected(41 + id)}>\n                    {item.name}\n                </li>\n            )\n        })\n    }\n\n    render() {\n        const { charList } = this.state;\n\n        if (!charList) {\n            return <Spinner />\n        }\n\n        const items = this.renderItems(charList);\n\n        return (\n            <ul className=\"item-list list-group\">\n                {items}\n            </ul>\n        );\n    }\n}","import CharDetails from './charDetails';\nexport default CharDetails;","import React, { Component } from 'react';\nimport gotService from '../../services/gotService'\nimport './charDetails.css';\n\nexport default class CharDetails extends Component {\n\n    gotService = new gotService();\n\n    state = {\n        char: null\n    }\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const { charId } = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.gotService.getCharacter(charId)\n            .then((char) => {\n                this.setState({ char });\n            })\n        this.foo.bar = 0;\n    }\n\n    render() {\n        if (!this.state.char) {\n            return <span className='select-error'>Please select a character</span>\n        }\n\n        const { name, gender, born, died, culture } = this.state.char;\n\n        return (\n            <div className=\"char-details rounded\">\n                <h4>{name}</h4>\n                <ul className=\"list-group list-group-flush\">\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Gender</span>\n                        <span>{gender}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Born</span>\n                        <span>{born}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Died</span>\n                        <span>{died}</span>\n                    </li>\n                    <li className=\"list-group-item d-flex justify-content-between\">\n                        <span className=\"term\">Culture</span>\n                        <span>{culture}</span>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { Col, Row, Container } from 'reactstrap';\nimport Header from '../header';\nimport RandomChar from '../randomChar';\nimport ItemList from '../itemList';\nimport CharDetails from '../charDetails';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            clicked: false,\n            selectedChar: null\n        }\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    onRandomChar = () => {\n        const { clicked } = this.state;\n        !clicked ? this.setState({ clicked: true }) : this.setState({ clicked: false })\n    }\n\n    render() {\n        return (\n            <>\n                <Container>\n                    <Header />\n                </Container>\n                <Container>\n                    {this.state.clicked ? (<Row>\n                        <Col lg={{ size: 5, offset: 0 }}>\n                            <RandomChar />\n                        </Col>\n                    </Row>) : null}\n                    <div>\n                        <button\n                            className='btn btn-primary'\n                            onClick={() => this.onRandomChar()} >Toggle</button>\n                    </div>\n                    <Row>\n                        <Col md='6'>\n                            <ItemList onCharSelected={this.onCharSelected} />\n                        </Col>\n                        <Col md='6'>\n                            <CharDetails charId={this.state.selectedChar} />\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        );\n    }\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}